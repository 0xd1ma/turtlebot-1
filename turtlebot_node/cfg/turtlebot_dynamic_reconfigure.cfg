#! /usr/bin/env python  
PKG = "turtlebot_node"
import roslib;roslib.load_manifest(PKG)

from dynamic_reconfigure.parameter_generator import *

gen = ParameterGenerator()

gen.add("port", str_t, 0, "Linux USB device from which to read the data.", "/dev/ttyUSB0")

drive_mode_enum = gen.enum([ gen.const("twist", int_t, 0, "Takes a geometry_msgs/Twist message and is navigation compatible."),
                  gen.const("turtle", int_t, 1, "Takes a turtlebot_node/Turtle message and is turtlesim compatible."),
                  gen.const("drive", int_t, 2, "Takes a turtlebot_node/Drive message which drives the TurtleBot as described in the iRobot Create manual.")],
                  "The possible drive modes (twist, turtle, drive).")

gen.add("drive_mode", int_t, 0, "The possible drive modes (twist, turtle, drive).", 0, 0, 2, edit_method = drive_mode_enum)

gen.add("bonus", bool_t, 0, "Plays Mario Bros. theme song.", False)

gen.add("has_gyro", bool_t, 0, "Enables or disables the gyro.", True)

gen.add("gyro_scale_correction", double_t, 0, "Scaling factor for correct gyro operation.", 1.35, 0.0, 3.0)

gen.add("odom_angular_scale_correction", double_t, 0, "A correction applied to the computation of the rotation in the odometry.", 1.0, 0.0, 3.0)

gen.add("odom_linear_scale_correction", double_t, 0, "A correction applied to the computation of the translation in odometry.", 1.0, 0.0, 3.0)


exit( gen.generate(PKG, "turtlebot_dynamic_reconfigure", "turtlebot_dynamic_reconfigure"))