<launch>
  <param name="robot_description" command="$(find xacro)/xacro.py '$(find turtlebot_urdf)/urdf/turtlebot.urdf.xacro'" />

  <node pkg="diagnostic_aggregator" type="aggregator_node" name="diagnostic_aggregator" >
    <!-- Load the file you made above -->
    <rosparam command="load" file="$(find turtlebot_bringup)/config/diagnostics.yaml" />
  </node>


  <node pkg="robot_state_publisher" type="state_publisher" name="robot_state_publisher" output="screen">
    <param name="publish_frequency" type="double" value="30.0" />
    <!--param name="tf_prefix" type="string" value="" /-->
  </node>

  <!-- Turtlebot Laptop Battery Diagnostics -->
  <node pkg="turtlebot_node" type="laptop_battery.py" name="turtlebot_laptop_battery">
  </node> 


  <!-- Turtlebot Driver -->
  <node pkg="turtlebot_node" type="turtlebot_node.py" name="turtlebot_node" output="screen">
    <param name="bonus" value="false" />
  </node> 

  <!-- Kinect -->
  <node pkg="openni_camera" type="openni_node" name="openni_camera" output="screen" respawn="true" >
    <param name="device_type" value="1" />
    <param name="registration_type" value="1" />
    <param name="point_cloud_resolution" value="1" />
    <param name="depth_optical_frame" value="base_kinect_depth_optical_frame" />
    <param name="rgb_optical_frame" value="base_kinect_rgb_optical_frame" />
    <param name="image_input_format" value="5" />
    <rosparam command="load" file="$(find openni_camera)/info/openni_params.yaml" />
  </node>

  <!-- throttling -->
  <node pkg="nodelet" type="nodelet" name="pointcloud_throttle" args="load pointcloud_to_laserscan/CloudThrottle openni_camera">
    <param name="max_rate" value="5"/>
    <remap from="cloud_in" to="/camera/depth/points"/>
    <remap from="cloud_out" to="cloud_throttled"/>
  </node>

  <!-- Fake Laser -->
  <node pkg="nodelet" type="nodelet" name="kinect_laser" args="load pointcloud_to_laserscan/CloudToScan openni_camera">
    <param name="output_frame_id" value="/base_kinect_depth_frame"/>
    <remap from="cloud" to="/cloud_throttled"/>
  </node>

</launch>
